generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for user authentication
model User {
  id       String   @id @default(cuid())
  username String   @unique
  password String
  // Define a relation to the Post model for user's posts.
  posts    Post[]
  // Define a relation to the Profile model for user profiles.
  profile  Profile?
}

// Profile model for user profiles
model Profile {
  id             String   @id @default(cuid())
  firstName      String
  lastName       String
  phoneNumber    String
  username       String   @unique
  email          String   @unique
  profilePicture String?
  bio            String
  interests      String[]
  connectWith    String[]
  updates        String[]
  userExperience String
  certificates   String
  challenges     String
  placeOfWork    String
  userRole       String[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  // Define a relation to the User model for user profiles.
  user           User     @relation(fields: [username], references: [username])
}

// Post model for user posts
model Post {
  id        String   @id @default(cuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Define a relation to the User model for the post author.
  user      User     @relation(fields: [userId], references: [username])
  userId    String
  // Define a relation to the Tag model for categorizing posts.
  tag       Tag      @relation(fields: [tagId], references: [id])
  tagId     String
  media     String?
}

// Tag model for categorizing posts
model Tag {
  id    String @id @default(cuid())
  name  String @unique
  // Define a relation to the Post model for tags associated with posts.
  posts Post[]
}
